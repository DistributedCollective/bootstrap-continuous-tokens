/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StaticPriceFormula,
  StaticPriceFormulaInterface,
} from "../StaticPriceFormula";

const _abi = [
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STATIC_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_connectorBalance",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_connectorWeight",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_depositAmount",
        type: "uint256",
      },
    ],
    name: "calculatePurchaseReturn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_connectorBalance",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_connectorWeight",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_sellAmount",
        type: "uint256",
      },
    ],
    name: "calculateSaleReturn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101ad806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806320855b441461005157806329a00e7c1461007557806349f9b0f71461008d578063aaf5eb68146100a0575b600080fd5b6100636a28946859613433ac9c75bc81565b60405190815260200160405180910390f35b6100636100833660046100e2565b6000949350505050565b61006361009b3660046100e2565b6100af565b610063670de0b6b3a764000081565b6000670de0b6b3a76400006100cf6a28946859613433ac9c75bc8461012a565b6100d99190610155565b95945050505050565b600080600080608085870312156100f857600080fd5b8435935060208501359250604085013563ffffffff8116811461011a57600080fd5b9396929550929360600135925050565b808202811582820484141761014f57634e487b7160e01b600052601160045260246000fd5b92915050565b60008261017257634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212205c8764b8e7b876b78c4de9826134f3ae2a9768538976c5aa252919b45abab49464736f6c63430008130033";

export class StaticPriceFormula__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StaticPriceFormula> {
    return super.deploy(overrides || {}) as Promise<StaticPriceFormula>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StaticPriceFormula {
    return super.attach(address) as StaticPriceFormula;
  }
  connect(signer: Signer): StaticPriceFormula__factory {
    return super.connect(signer) as StaticPriceFormula__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StaticPriceFormulaInterface {
    return new utils.Interface(_abi) as StaticPriceFormulaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StaticPriceFormula {
    return new Contract(address, _abi, signerOrProvider) as StaticPriceFormula;
  }
}
