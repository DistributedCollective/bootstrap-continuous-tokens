/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StaticPriceFormula,
  StaticPriceFormulaInterface,
} from "../StaticPriceFormula";

const _abi = [
  {
    inputs: [],
    name: "MYNT_SUPPLY_SNAPSHOT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SOV_BALANCE_SNAPSHOT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_connectorBalance",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_connectorWeight",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_depositAmount",
        type: "uint256",
      },
    ],
    name: "calculatePurchaseReturn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_connectorBalance",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_connectorWeight",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_sellAmount",
        type: "uint256",
      },
    ],
    name: "calculateSaleReturn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101b1806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806329a00e7c1461005157806349f9b0f71461007b578063729158c01461008e578063e11a7c13146100a0575b600080fd5b61006961005f3660046100e6565b6000949350505050565b60405190815260200160405180910390f35b6100696100893660046100e6565b6100b1565b6100696a28946859613433ac9c75bc81565b610069693111f67cc6eaaebf4a6a81565b60006a28946859613433ac9c75bc6100d3693111f67cc6eaaebf4a6a8461012e565b6100dd9190610159565b95945050505050565b600080600080608085870312156100fc57600080fd5b8435935060208501359250604085013563ffffffff8116811461011e57600080fd5b9396929550929360600135925050565b808202811582820484141761015357634e487b7160e01b600052601160045260246000fd5b92915050565b60008261017657634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220745e09d14f21ad090db9fd21ead5e2ae3693543a28502a4fbc4064260b7255bb64736f6c63430008130033";

export class StaticPriceFormula__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StaticPriceFormula> {
    return super.deploy(overrides || {}) as Promise<StaticPriceFormula>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StaticPriceFormula {
    return super.attach(address) as StaticPriceFormula;
  }
  connect(signer: Signer): StaticPriceFormula__factory {
    return super.connect(signer) as StaticPriceFormula__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StaticPriceFormulaInterface {
    return new utils.Interface(_abi) as StaticPriceFormulaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StaticPriceFormula {
    return new Contract(address, _abi, signerOrProvider) as StaticPriceFormula;
  }
}
