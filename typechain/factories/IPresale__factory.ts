/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IPresale, IPresaleInterface } from "../IPresale";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "_contributor",
        type: "address",
      },
      {
        name: "_vestedPurchaseId",
        type: "uint256",
      },
    ],
    name: "refund",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "close",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "contributionToken",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_contributor",
        type: "address",
      },
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "contribute",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "contributionToTokens",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "open",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IPresale__factory {
  static readonly abi = _abi;
  static createInterface(): IPresaleInterface {
    return new utils.Interface(_abi) as IPresaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPresale {
    return new Contract(address, _abi, signerOrProvider) as IPresale;
  }
}
