/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CallsScript, CallsScriptInterface } from "../CallsScript";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "hasInitialized",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_script",
        type: "bytes",
      },
      {
        name: "",
        type: "bytes",
      },
      {
        name: "_blacklist",
        type: "address[]",
      },
    ],
    name: "execScript",
    outputs: [
      {
        name: "",
        type: "bytes",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "executorType",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getInitializationBlock",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isPetrified",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        name: "dst",
        type: "address",
      },
    ],
    name: "LogScriptCall",
    type: "event",
  },
];

const _bytecode =
  "0x608060405261001564010000000061001a810204565b610223565b61002b64010000000061011a810204565b60408051808201909152601881527f494e49545f414c52454144595f494e495449414c495a4544000000000000000060208201529015610103576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156100c85781810151838201526020016100b0565b50505050905090810190601f1680156100f55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50610118600019640100000000610145810204565b565b60006101406000805160206109d683398151915264010000000061076861021b82021704565b905090565b61015664010000000061011a810204565b60408051808201909152601881527f494e49545f414c52454144595f494e495449414c495a45440000000000000000602082015290156101f2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382528381815181526020019150805190602001908083836000838110156100c85781810151838201526020016100b0565b506102186000805160206109d68339815191528264010000000061077461021f82021704565b50565b5490565b9055565b6107a4806102326000396000f30060806040526004361061006c5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630803fac08114610071578063279cea351461009a5780638333d9b2146101475780638b3dd7491461016e578063de4796ed14610183575b600080fd5b34801561007d57600080fd5b50610086610198565b604080519115158252519081900360200190f35b3480156100a657600080fd5b506100d260246004803582810192908201359181358083019290820135916044359182019101356101c1565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010c5781810151838201526020016100f4565b50505050905090810190601f1680156101395780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015357600080fd5b5061015c610669565b60408051918252519081900360200190f35b34801561017a57600080fd5b5061015c61068d565b34801561018f57600080fd5b506100866106bd565b6000806101a361068d565b905080158015906101bb5750806101b86106d0565b10155b91505090565b606060008060008060008060006101d6610198565b60408051808201909152601481527f494e49545f4e4f545f494e495449414c495a454400000000000000000000000060208201529015156102985760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561025d578181015183820152602001610245565b50505050905090810190601f16801561028a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600496505b8c8710156106585760408051808201909152601781527f45564d43414c4c535f494e56414c49445f4c454e47544800000000000000000060208201526018888f0310156103305760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360008381101561025d578181015183820152602001610245565b50610374878f8f8080601f01602080910402602001604051908101604052809392919081815260200183838082843750949594505063ffffffff6106d41692505050565b9550600094505b8885101561046f5789898681811061038f57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040805190810160405280601981526020017f45564d43414c4c535f424c41434b4c49535445445f43414c4c000000000000008152509015156104635760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360008381101561025d578181015183820152602001610245565b5060019094019361037b565b60405173ffffffffffffffffffffffffffffffffffffffff871690309033907f9dcff9d94fbfdb4622d11edb383005f95e78efb446c72d92f8e615c6025c470390600090a46104fa876014018f8f8080601f01602080910402602001604051908101604052809392919081815260200183838082843750949594505063ffffffff6107091692505050565b63ffffffff16935086601401600401925061054e838f8f8080601f01602080910402602001604051908101604052809392919081815260200183838082843750949594505063ffffffff6107611692505050565b60408051808201909152601781527f45564d43414c4c535f494e56414c49445f4c454e475448000000000000000000602082015284860198509092508d8811156105dd5760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360008381101561025d578181015183820152602001610245565b50600080858460008a6113885a03f190508080156105fa57610652565b6040513d801561060d573d6000833e3d82fd5b60e560020a62461bcd02825260206004830152601660248301527f45564d43414c4c535f43414c4c5f5245564552544544000000000000000000006044830152606482fd5b5061029e565b505050505050509695505050505050565b7f2dc858a00f3e417be1394b87c07158e989ec681ce8cc68a9093680ac1a87030290565b60006106b87febb05b386a8d34882b8711d156f463690983dc47815980fb82aeeff1aa43579e610768565b905090565b60006000196106ca61068d565b14905090565b4390565b6000806106e1848461076c565b6c010000000000000000000000006bffffffffffffffffffffffff1990911604949350505050565b600080610716848461076c565b7c01000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000090911604949350505050565b0160200190565b5490565b016020015190565b90555600a165627a7a72305820fb4cdbff76db33eb56a6710463b8fd337e33a37603a1f48b5ef9fedea9d6ad2d0029ebb05b386a8d34882b8711d156f463690983dc47815980fb82aeeff1aa43579e";

export class CallsScript__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CallsScript> {
    return super.deploy(overrides || {}) as Promise<CallsScript>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CallsScript {
    return super.attach(address) as CallsScript;
  }
  connect(signer: Signer): CallsScript__factory {
    return super.connect(signer) as CallsScript__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CallsScriptInterface {
    return new utils.Interface(_abi) as CallsScriptInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CallsScript {
    return new Contract(address, _abi, signerOrProvider) as CallsScript;
  }
}
