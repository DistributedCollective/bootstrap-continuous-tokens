/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyntToken, MyntTokenInterface } from "../MyntToken";

const _abi = [
  {
    inputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "MarketMakerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "PresaleChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "approveAndCall",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "marketMaker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "presale",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setMarketMaker",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setPresale",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600680546001600160a01b03199081169091556007805490911690553480156200002d57600080fd5b50604080518082018252600b81526a14dbdd9c9e5b88135e5b9d60aa1b6020808301918252835180850190945260048452631356539560e21b9084015281519192916012916200008191600391906200011c565b508151620000979060049060208501906200011c565b506005805460ff191660ff929092169190911790555060009050620000bb62000117565b60058054610100600160a81b0319166101006001600160a01b03841690810291909117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350620001be565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200015f57805160ff19168380011785556200018f565b828001600101855582156200018f579182015b828111156200018f57825182559160200191906001019062000172565b506200019d929150620001a1565b5090565b6200011991905b808211156200019d5760008155600101620001a8565b61149480620001ce6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80638f32d59b116100b8578063cae9ca511161007c578063cae9ca51146103ba578063d5fcc7b614610475578063dd62ed3e1461049b578063f2fde38b146104c9578063f54c42d7146104ef578063fdea8e0b1461051557610142565b80638f32d59b1461032657806395d89b411461032e5780639dc29fac14610336578063a457c2d714610362578063a9059cbb1461038e57610142565b8063313ce5671161010a578063313ce56714610278578063395093511461029657806340c10f19146102c257806370a08231146102f0578063715018a6146103165780638da5cb5b1461031e57610142565b806306fdde0314610147578063095ea7b3146101c457806318160ddd146102045780631f21f9af1461021e57806323b872dd14610242575b600080fd5b61014f61051d565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610189578181015183820152602001610171565b50505050905090810190601f1680156101b65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f0600480360360408110156101da57600080fd5b506001600160a01b0381351690602001356105b3565b604080519115158252519081900360200190f35b61020c6105d0565b60408051918252519081900360200190f35b6102266105d6565b604080516001600160a01b039092168252519081900360200190f35b6101f06004803603606081101561025857600080fd5b506001600160a01b038135811691602081013590911690604001356105e5565b610280610672565b6040805160ff9092168252519081900360200190f35b6101f0600480360360408110156102ac57600080fd5b506001600160a01b03813516906020013561067b565b6102ee600480360360408110156102d857600080fd5b506001600160a01b0381351690602001356106cf565b005b61020c6004803603602081101561030657600080fd5b50356001600160a01b031661073f565b6102ee61075a565b6102266107f1565b6101f0610805565b61014f610830565b6102ee6004803603604081101561034c57600080fd5b506001600160a01b038135169060200135610891565b6101f06004803603604081101561037857600080fd5b506001600160a01b0381351690602001356108fb565b6101f0600480360360408110156103a457600080fd5b506001600160a01b038135169060200135610969565b6102ee600480360360608110156103d057600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561040057600080fd5b82018360208201111561041257600080fd5b8035906020019184600183028401116401000000008311171561043457600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061097d945050505050565b6102ee6004803603602081101561048b57600080fd5b50356001600160a01b0316610a6e565b61020c600480360360408110156104b157600080fd5b506001600160a01b0381358116916020013516610b4c565b6102ee600480360360208110156104df57600080fd5b50356001600160a01b0316610b77565b6102ee6004803603602081101561050557600080fd5b50356001600160a01b0316610bca565b610226610ca8565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105a95780601f1061057e576101008083540402835291602001916105a9565b820191906000526020600020905b81548152906001019060200180831161058c57829003601f168201915b5050505050905090565b60006105c76105c0610cb7565b8484610cbb565b50600192915050565b60025490565b6006546001600160a01b031681565b60006105f2848484610da7565b610668846105fe610cb7565b61066385604051806060016040528060288152602001611389602891396001600160a01b038a1660009081526001602052604081209061063c610cb7565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610f0316565b610cbb565b5060019392505050565b60055460ff1690565b60006105c7610688610cb7565b846106638560016000610699610cb7565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610f9a16565b6007546001600160a01b03163314806106f257506006546001600160a01b031633145b610731576040805162461bcd60e51b815260206004820152600b60248201526a1b9bdd08185b1b1bddd95960aa1b604482015290519081900360640190fd5b61073b8282610ffb565b5050565b6001600160a01b031660009081526020819052604090205490565b610762610805565b6107a1576040805162461bcd60e51b815260206004820181905260248201526000805160206113b1833981519152604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b60055461010090046001600160a01b031690565b60055460009061010090046001600160a01b0316610821610cb7565b6001600160a01b031614905090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105a95780601f1061057e576101008083540402835291602001916105a9565b6006546001600160a01b03163314806108b25750336001600160a01b038316145b6108f1576040805162461bcd60e51b815260206004820152600b60248201526a1b9bdd08185b1b1bddd95960aa1b604482015290519081900360640190fd5b61073b82826110eb565b60006105c7610908610cb7565b846106638560405180606001604052806025815260200161143b6025913960016000610932610cb7565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610f0316565b60006105c7610976610cb7565b8484610da7565b61098783836105b3565b50604051638f4ffcb160e01b815233600482018181526024830185905230604484018190526080606485019081528551608486015285516001600160a01b03891695638f4ffcb1959489949389939192909160a490910190602085019080838360005b83811015610a025781810151838201526020016109ea565b50505050905090810190601f168015610a2f5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610a5157600080fd5b505af1158015610a65573d6000803e3d6000fd5b50505050505050565b610a76610805565b610ab5576040805162461bcd60e51b815260206004820181905260248201526000805160206113b1833981519152604482015290519081900360640190fd5b6001600160a01b038116610b02576040805162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206164647265737360881b604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0383169081179091556040517f580207e72023c1323a84d1051f09f80aec1c61f6c4a8ba920ac2be3fc68f734e90600090a250565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610b7f610805565b610bbe576040805162461bcd60e51b815260206004820181905260248201526000805160206113b1833981519152604482015290519081900360640190fd5b610bc7816111e7565b50565b610bd2610805565b610c11576040805162461bcd60e51b815260206004820181905260248201526000805160206113b1833981519152604482015290519081900360640190fd5b6001600160a01b038116610c5e576040805162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206164647265737360881b604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0383169081179091556040517f81cf0812c92e10d8a477ba7cf60a65743629f722d43762ecb6ecc8da473ddd3b90600090a250565b6007546001600160a01b031681565b3390565b6001600160a01b038316610d005760405162461bcd60e51b81526004018080602001828103825260248152602001806114176024913960400191505060405180910390fd5b6001600160a01b038216610d455760405162461bcd60e51b81526004018080602001828103825260228152602001806113416022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610dec5760405162461bcd60e51b81526004018080602001828103825260258152602001806113f26025913960400191505060405180910390fd5b6001600160a01b038216610e315760405162461bcd60e51b81526004018080602001828103825260238152602001806112d66023913960400191505060405180910390fd5b610e7481604051806060016040528060268152602001611363602691396001600160a01b038616600090815260208190526040902054919063ffffffff610f0316565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610ea9908263ffffffff610f9a16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610f925760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610f57578181015183820152602001610f3f565b50505050905090810190601f168015610f845780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610ff4576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216611056576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254611069908263ffffffff610f9a16565b6002556001600160a01b038216600090815260208190526040902054611095908263ffffffff610f9a16565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b0382166111305760405162461bcd60e51b81526004018080602001828103825260218152602001806113d16021913960400191505060405180910390fd5b611173816040518060600160405280602281526020016112f9602291396001600160a01b038516600090815260208190526040902054919063ffffffff610f0316565b6001600160a01b03831660009081526020819052604090205560025461119f908263ffffffff61129316565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b03811661122c5760405162461bcd60e51b815260040180806020018281038252602681526020018061131b6026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6000610ff483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f0356fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820a7ac030f84cd0e208538eabd1a6d524ceb9cc03ac790304b4550709401a0028964736f6c63430005110032";

export class MyntToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyntToken> {
    return super.deploy(overrides || {}) as Promise<MyntToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MyntToken {
    return super.attach(address) as MyntToken;
  }
  connect(signer: Signer): MyntToken__factory {
    return super.connect(signer) as MyntToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyntTokenInterface {
    return new utils.Interface(_abi) as MyntTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyntToken {
    return new Contract(address, _abi, signerOrProvider) as MyntToken;
  }
}
