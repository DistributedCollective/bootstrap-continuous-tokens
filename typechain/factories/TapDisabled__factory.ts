/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TapDisabled, TapDisabledInterface } from "../TapDisabled";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    name: "updateMaximumTapRateIncreasePct",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "",
        type: "address",
      },
    ],
    name: "updateBeneficiary",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_token",
        type: "address",
      },
    ],
    name: "updateTappedAmount",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "",
        type: "address",
      },
    ],
    name: "resetTappedToken",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_token",
        type: "address",
      },
    ],
    name: "rates",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "",
        type: "address",
      },
      {
        name: "",
        type: "uint256",
      },
      {
        name: "",
        type: "uint256",
      },
    ],
    name: "addTappedToken",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    name: "updateMaximumTapFloorDecreasePct",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "address",
      },
    ],
    name: "getMaximumWithdrawal",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "",
        type: "address",
      },
      {
        name: "",
        type: "uint256",
      },
      {
        name: "",
        type: "uint256",
      },
    ],
    name: "updateTappedToken",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061019e806100206000396000f3006080604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166307e18bc881146100a85780630aaffd2a146100c257806351cff8d9146100c2578063846a0a89146100c25780639cbbba88146100c2578063a8734f0b146100f0578063b897b62814610130578063d21bd820146100a8578063e2a5aec5146100f0578063f30a00ce14610130575b600080fd5b3480156100b457600080fd5b506100c0600435610164565b005b3480156100ce57600080fd5b506100c073ffffffffffffffffffffffffffffffffffffffff60043516610164565b3480156100fc57600080fd5b5061011e73ffffffffffffffffffffffffffffffffffffffff60043516610167565b60408051918252519081900360200190f35b34801561013c57600080fd5b506100c073ffffffffffffffffffffffffffffffffffffffff6004351660243560443561016d565b50565b50600090565b5050505600a165627a7a72305820e9770dcf610cdfdee669015e730a69c849835f260e2625404e135fb162d6ea460029";

export class TapDisabled__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TapDisabled> {
    return super.deploy(overrides || {}) as Promise<TapDisabled>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TapDisabled {
    return super.attach(address) as TapDisabled;
  }
  connect(signer: Signer): TapDisabled__factory {
    return super.connect(signer) as TapDisabled__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TapDisabledInterface {
    return new utils.Interface(_abi) as TapDisabledInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TapDisabled {
    return new Contract(address, _abi, signerOrProvider) as TapDisabled;
  }
}
