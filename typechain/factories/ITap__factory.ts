/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { ITap, ITapInterface } from "../ITap";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "_maximumTapRateIncreasePct",
        type: "uint256",
      },
    ],
    name: "updateMaximumTapRateIncreasePct",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "updateBeneficiary",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_token",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_token",
        type: "address",
      },
    ],
    name: "updateTappedAmount",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_token",
        type: "address",
      },
    ],
    name: "resetTappedToken",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_token",
        type: "address",
      },
    ],
    name: "rates",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_token",
        type: "address",
      },
      {
        name: "_rate",
        type: "uint256",
      },
      {
        name: "_floor",
        type: "uint256",
      },
    ],
    name: "addTappedToken",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_maximumTapFloorDecreasePct",
        type: "uint256",
      },
    ],
    name: "updateMaximumTapFloorDecreasePct",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_token",
        type: "address",
      },
    ],
    name: "getMaximumWithdrawal",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_token",
        type: "address",
      },
      {
        name: "_rate",
        type: "uint256",
      },
      {
        name: "_floor",
        type: "uint256",
      },
    ],
    name: "updateTappedToken",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ITap__factory {
  static readonly abi = _abi;
  static createInterface(): ITapInterface {
    return new utils.Interface(_abi) as ITapInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ITap {
    return new Contract(address, _abi, signerOrProvider) as ITap;
  }
}
