{
  "language": "Solidity",
  "sources": {
    "contracts/StaticPriceFormula.sol": {
      "content": "pragma solidity 0.8.19;\n\ncontract StaticPriceFormula {\n    // SOV_BALANCE_SNAPSHOT is the bonding curve reserve's SOV balance\n    uint256 public constant SOV_BALANCE_SNAPSHOT = 231727313599607376661098;\n\n    // MYNT_SUPPLY_SNAPSHOT is the total supply of mynt token\n    uint256 public constant MYNT_SUPPLY_SNAPSHOT = 49057867925919878933673404;\n\n    /**\n     * Calculate purchase return amount that always return 0 value.\n     * Will accept 4 parameters to support backward compatibility with bancor formula.\n     * https://github.com/AragonBlack/fundraising/blob/master/apps/bancor-formula/contracts/BancorFormula.sol\n     * @param _supply              token total supply\n     * @param _connectorBalance    total connector balance\n     * @param _connectorWeight     connector weight, represented in ppm, 1-1000000\n     * @param _depositAmount       deposit amount, in connector token\n     *\n     * @return static 0 value.\n     */\n    function calculatePurchaseReturn(\n        uint256 _supply,\n        uint256 _connectorBalance,\n        uint32 _connectorWeight,\n        uint256 _depositAmount\n    ) public pure returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * Calculate sale return amount based on the Current MYNT supply.\n     * Will accept 4 parameters to support backward compatibility with bancor formula.\n     *\n     * https://github.com/AragonBlack/fundraising/blob/master/apps/bancor-formula/contracts/BancorFormula.sol\n     * @param _supply              token total supply\n     * @param _connectorBalance    total connector balance\n     * @param _connectorWeight     connector weight, represented in ppm, 1-1000000\n     * @param _sellAmount       sell amount, in the token itself\n     *\n     * @return formula = _sellAmount * SOV_BALANCE_SNAPSHOT / MYNT_SUPPLY_SNAPSHOT\n     */\n    function calculateSaleReturn(\n        uint256 _supply,\n        uint256 _connectorBalance,\n        uint32 _connectorWeight,\n        uint256 _sellAmount\n    ) public pure returns (uint256) {\n        return (_sellAmount * SOV_BALANCE_SNAPSHOT) / MYNT_SUPPLY_SNAPSHOT;\n    }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates",
          "devdoc",
          "userdoc"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    },
    "libraries": {
      "": {
        "__CACHE_BREAKER__": "0x00000000d41867734bbee4c6863d9255b2b06ac1"
      }
    }
  }
}