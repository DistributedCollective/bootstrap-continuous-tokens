{
  "address": "0xE4a40a1d1a6aE99C0804b353a7b0c5aF793FDe99",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "creationBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newController",
          "type": "address"
        }
      ],
      "name": "changeController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "balanceOfAt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cloneTokenName",
          "type": "string"
        },
        {
          "name": "_cloneDecimalUnits",
          "type": "uint8"
        },
        {
          "name": "_cloneTokenSymbol",
          "type": "string"
        },
        {
          "name": "_snapshotBlock",
          "type": "uint256"
        },
        {
          "name": "_transfersEnabled",
          "type": "bool"
        }
      ],
      "name": "createCloneToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "parentToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "generateTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "totalSupplyAt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "transfersEnabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "parentSnapShotBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "destroyTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "claimTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenFactory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_transfersEnabled",
          "type": "bool"
        }
      ],
      "name": "enableTransfers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tokenFactory",
          "type": "address"
        },
        {
          "name": "_parentToken",
          "type": "address"
        },
        {
          "name": "_parentSnapShotBlock",
          "type": "uint256"
        },
        {
          "name": "_tokenName",
          "type": "string"
        },
        {
          "name": "_decimalUnits",
          "type": "uint8"
        },
        {
          "name": "_tokenSymbol",
          "type": "string"
        },
        {
          "name": "_transfersEnabled",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_controller",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "ClaimedTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_cloneToken",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_snapshotBlock",
          "type": "uint256"
        }
      ],
      "name": "NewCloneToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "transactionHash": "0x521f0e794ec343a64f561c63298169f4fd341f6b84bd5ca46bf1876c3ff5b3b4",
  "receipt": {
    "to": null,
    "from": "0x362A9C55d54da572a7a5853171dE8Fd04d1Da800",
    "contractAddress": "0xE4a40a1d1a6aE99C0804b353a7b0c5aF793FDe99",
    "transactionIndex": 0,
    "gasUsed": "1593758",
    "logsBloom": "0x
    "blockHash": "0xf6f5b935b8ea757a40f114a9238aea9d7df517ef0209ccb48fc4a9464e56a923",
    "transactionHash": "0x521f0e794ec343a64f561c63298169f4fd341f6b84bd5ca46bf1876c3ff5b3b4",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1593758",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x03d917a2642BE52304B32B55D92f8BF76f2e0b80",
    "0x0000000000000000000000000000000000000000",
    0,
    "Collateral Token",
    18,
    "COLL",
    true
  ],
  "solcInputHash": "c17a3333357a708f6c9647a49776a9ab",
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creationBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newController\",\"type\":\"address\"}],\"name\":\"changeController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cloneTokenName\",\"type\":\"string\"},{\"name\":\"_cloneDecimalUnits\",\"type\":\"uint8\"},{\"name\":\"_cloneTokenSymbol\",\"type\":\"string\"},{\"name\":\"_snapshotBlock\",\"type\":\"uint256\"},{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"createCloneToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"generateTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfersEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentSnapShotBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroyTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenFactory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"enableTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenFactory\",\"type\":\"address\"},{\"name\":\"_parentToken\",\"type\":\"address\"},{\"name\":\"_parentSnapShotBlock\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_controller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ClaimedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_cloneToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_snapshotBlock\",\"type\":\"uint256\"}],\"name\":\"NewCloneToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"This function makes it easy to read the `allowed[]` map\",\"params\":{\"_owner\":\"The address of the account that owns the token\",\"_spender\":\"The address of the account able to transfer the tokens\"},\"return\":\"Amount of remaining tokens of _owner that _spender is allowed  to spend\"},\"approve(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be approved for transfer\",\"_spender\":\"The address of the account able to transfer the tokens\"},\"return\":\"True if the approval was successful\"},\"approveAndCall(address,uint256,bytes)\":{\"params\":{\"_amount\":\"The amount of tokens to be approved for transfer\",\"_spender\":\"The address of the contract able to transfer the tokens\"},\"return\":\"True if the function call was successful\"},\"balanceOf(address)\":{\"params\":{\"_owner\":\"The address that's balance is being requested\"},\"return\":\"The balance of `_owner` at the current block\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Queries the balance of `_owner` at a specific `_blockNumber`\",\"params\":{\"_blockNumber\":\"The block number when the balance is queried\",\"_owner\":\"The address from which the balance will be retrieved\"},\"return\":\"The balance at `_blockNumber`\"},\"changeController(address)\":{\"params\":{\"_newController\":\"The new controller of the contract\"}},\"claimTokens(address)\":{\"params\":{\"_token\":\"The address of the token contract that you want to recover  set to 0 in case you want to extract ether.\"}},\"createCloneToken(string,uint8,string,uint256,bool)\":{\"params\":{\"_cloneDecimalUnits\":\"Number of decimals of the smallest unit\",\"_cloneTokenName\":\"Name of the clone token\",\"_cloneTokenSymbol\":\"Symbol of the clone token\",\"_snapshotBlock\":\"Block when the distribution of the parent token is  copied to set the initial distribution of the new clone token;  if the block is zero than the actual block, the current block is used\",\"_transfersEnabled\":\"True if transfers are allowed in the clone\"},\"return\":\"The address of the new MiniMeToken Contract\"},\"destroyTokens(address,uint256)\":{\"params\":{\"_amount\":\"The quantity of tokens to burn\",\"_owner\":\"The address that will lose the tokens\"},\"return\":\"True if the tokens are burned correctly\"},\"enableTransfers(bool)\":{\"params\":{\"_transfersEnabled\":\"True if transfers are allowed in the clone\"}},\"generateTokens(address,uint256)\":{\"params\":{\"_amount\":\"The quantity of tokens generated\",\"_owner\":\"The address that will be assigned the new tokens\"},\"return\":\"True if the tokens are generated correctly\"},\"totalSupply()\":{\"details\":\"This function makes it easy to get the total number of tokens\",\"return\":\"The total number of tokens\"},\"totalSupplyAt(uint256)\":{\"params\":{\"_blockNumber\":\"The block number when the totalSupply is queried\"},\"return\":\"The total amount of tokens at `_blockNumber`\"},\"transfer(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be transferred\",\"_to\":\"The address of the recipient\"},\"return\":\"Whether the transfer was successful or not\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be transferred\",\"_from\":\"The address holding the tokens being transferred\",\"_to\":\"The address of the recipient\"},\"return\":\"True if the transfer was successful\"}}},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"`msg.sender` approves `_spender` to spend `_amount` tokens on  its behalf. This is a modified version of the ERC20 approve function  to be a little bit safer\"},\"approveAndCall(address,uint256,bytes)\":{\"notice\":\"`msg.sender` approves `_spender` to send `_amount` tokens on  its behalf, and then a function is triggered in the contract that is  being approved, `_spender`. This allows users to use their tokens to  interact with contracts in one function call instead of two\"},\"balanceOfAt(address,uint256)\":{\"notice\":\"/////////////\"},\"changeController(address)\":{\"notice\":\"Changes the controller of the contract\"},\"claimTokens(address)\":{\"notice\":\"///////This method can be used by the controller to extract mistakenly  sent tokens to this contract.\"},\"createCloneToken(string,uint8,string,uint256,bool)\":{\"notice\":\"/////////////Creates a new clone token with the initial distribution being  this token at `_snapshotBlock`\"},\"destroyTokens(address,uint256)\":{\"notice\":\"Burns `_amount` tokens from `_owner`\"},\"enableTransfers(bool)\":{\"notice\":\"/////////////Enables token holders to transfer their tokens freely if true\"},\"generateTokens(address,uint256)\":{\"notice\":\"/////////////Generates `_amount` tokens that are assigned to `_owner`\"},\"totalSupplyAt(uint256)\":{\"notice\":\"Total amount of tokens at a specific `_blockNumber`.\"},\"transfer(address,uint256)\":{\"notice\":\"////////////////Send `_amount` tokens to `_to` from `msg.sender`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Send `_amount` tokens to `_to` from `_from` on the condition it  is approved by `_from`\"}}}},\"settings\":{\"compilationTarget\":{\"@aragon/apps-shared-minime/contracts/MiniMeToken.sol\":\"MiniMeToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aragon/apps-shared-minime/contracts/ITokenController.sol\":{\"content\":\"pragma solidity ^0.4.24;\\n\\n/// @dev The token controller contract must implement these functions\\n\\n\\ninterface ITokenController {\\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\\n    /// @param _owner The address that sent the ether to create tokens\\n    /// @return True if the ether is accepted, false if it throws\\n    function proxyPayment(address _owner) external payable returns(bool);\\n\\n    /// @notice Notifies the controller about a token transfer allowing the\\n    ///  controller to react if desired\\n    /// @param _from The origin of the transfer\\n    /// @param _to The destination of the transfer\\n    /// @param _amount The amount of the transfer\\n    /// @return False if the controller does not authorize the transfer\\n    function onTransfer(address _from, address _to, uint _amount) external returns(bool);\\n\\n    /// @notice Notifies the controller about an approval allowing the\\n    ///  controller to react if desired\\n    /// @param _owner The address that calls `approve()`\\n    /// @param _spender The spender in the `approve()` call\\n    /// @param _amount The amount in the `approve()` call\\n    /// @return False if the controller does not authorize the approval\\n    function onApprove(address _owner, address _spender, uint _amount) external returns(bool);\\n}\\n\",\"keccak256\":\"0x030d1ea5543fd23d3c962cbf34b1c3b6e15d9bbfb711416e1cf4160c3bcdccaa\"},\"@aragon/apps-shared-minime/contracts/MiniMeToken.sol\":{\"content\":\"pragma solidity ^0.4.24;\\n\\n/*\\n    Copyright 2016, Jordi Baylina\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title MiniMeToken Contract\\n/// @author Jordi Baylina\\n/// @dev This token contract's goal is to make it easy for anyone to clone this\\n///  token using the token distribution at a given block, this will allow DAO's\\n///  and DApps to upgrade their features in a decentralized manner without\\n///  affecting the original token\\n/// @dev It is ERC20 compliant, but still needs to under go further testing.\\n\\nimport \\\"./ITokenController.sol\\\";\\n\\ncontract Controlled {\\n    /// @notice The address of the controller is the only address that can call\\n    ///  a function with this modifier\\n    modifier onlyController {\\n        require(msg.sender == controller);\\n        _;\\n    }\\n\\n    address public controller;\\n\\n    function Controlled()  public { controller = msg.sender;}\\n\\n    /// @notice Changes the controller of the contract\\n    /// @param _newController The new controller of the contract\\n    function changeController(address _newController) onlyController  public {\\n        controller = _newController;\\n    }\\n}\\n\\ncontract ApproveAndCallFallBack {\\n    function receiveApproval(\\n        address from,\\n        uint256 _amount,\\n        address _token,\\n        bytes _data\\n    ) public;\\n}\\n\\n/// @dev The actual token contract, the default controller is the msg.sender\\n///  that deploys the contract, so usually this token will be deployed by a\\n///  token controller contract, which Giveth will call a \\\"Campaign\\\"\\ncontract MiniMeToken is Controlled {\\n\\n    string public name;                //The Token's name: e.g. DigixDAO Tokens\\n    uint8 public decimals;             //Number of decimals of the smallest unit\\n    string public symbol;              //An identifier: e.g. REP\\n    string public version = \\\"MMT_0.1\\\"; //An arbitrary versioning scheme\\n\\n\\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\\n    ///  given value, the block number attached is the one that last changed the\\n    ///  value\\n    struct Checkpoint {\\n\\n        // `fromBlock` is the block number that the value was generated from\\n        uint128 fromBlock;\\n\\n        // `value` is the amount of tokens at a specific block number\\n        uint128 value;\\n    }\\n\\n    // `parentToken` is the Token address that was cloned to produce this token;\\n    //  it will be 0x0 for a token that was not cloned\\n    MiniMeToken public parentToken;\\n\\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\\n    //  used to determine the initial distribution of the Clone Token\\n    uint public parentSnapShotBlock;\\n\\n    // `creationBlock` is the block number that the Clone Token was created\\n    uint public creationBlock;\\n\\n    // `balances` is the map that tracks the balance of each address, in this\\n    //  contract when the balance changes the block number that the change\\n    //  occurred is also included in the map\\n    mapping (address => Checkpoint[]) balances;\\n\\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\\n    mapping (address => mapping (address => uint256)) allowed;\\n\\n    // Tracks the history of the `totalSupply` of the token\\n    Checkpoint[] totalSupplyHistory;\\n\\n    // Flag that determines if the token is transferable or not.\\n    bool public transfersEnabled;\\n\\n    // The factory used to create new clone tokens\\n    MiniMeTokenFactory public tokenFactory;\\n\\n////////////////\\n// Constructor\\n////////////////\\n\\n    /// @notice Constructor to create a MiniMeToken\\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\\n    ///  will create the Clone token contracts, the token factory needs to be\\n    ///  deployed first\\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\\n    ///  new token\\n    /// @param _parentSnapShotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token, set to 0 if it\\n    ///  is a new token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    function MiniMeToken(\\n        MiniMeTokenFactory _tokenFactory,\\n        MiniMeToken _parentToken,\\n        uint _parentSnapShotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    )  public\\n    {\\n        tokenFactory = _tokenFactory;\\n        name = _tokenName;                                 // Set the name\\n        decimals = _decimalUnits;                          // Set the decimals\\n        symbol = _tokenSymbol;                             // Set the symbol\\n        parentToken = _parentToken;\\n        parentSnapShotBlock = _parentSnapShotBlock;\\n        transfersEnabled = _transfersEnabled;\\n        creationBlock = block.number;\\n    }\\n\\n\\n///////////////////\\n// ERC20 Methods\\n///////////////////\\n\\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return Whether the transfer was successful or not\\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n        return doTransfer(msg.sender, _to, _amount);\\n    }\\n\\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\\n    ///  is approved by `_from`\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function transferFrom(address _from, address _to, uint256 _amount) public returns (bool success) {\\n\\n        // The controller of this contract can move tokens around at will,\\n        //  this is important to recognize! Confirm that you trust the\\n        //  controller of this contract, which in most situations should be\\n        //  another open source smart contract or 0x0\\n        if (msg.sender != controller) {\\n            require(transfersEnabled);\\n\\n            // The standard ERC 20 transferFrom functionality\\n            if (allowed[_from][msg.sender] < _amount)\\n                return false;\\n            allowed[_from][msg.sender] -= _amount;\\n        }\\n        return doTransfer(_from, _to, _amount);\\n    }\\n\\n    /// @dev This is the actual transfer function in the token contract, it can\\n    ///  only be called by other functions in this contract.\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function doTransfer(address _from, address _to, uint _amount) internal returns(bool) {\\n        if (_amount == 0) {\\n            return true;\\n        }\\n        require(parentSnapShotBlock < block.number);\\n        // Do not allow transfer to 0x0 or the token contract itself\\n        require((_to != 0) && (_to != address(this)));\\n        // If the amount being transfered is more than the balance of the\\n        //  account the transfer returns false\\n        var previousBalanceFrom = balanceOfAt(_from, block.number);\\n        if (previousBalanceFrom < _amount) {\\n            return false;\\n        }\\n        // Alerts the token controller of the transfer\\n        if (isContract(controller)) {\\n            // Adding the ` == true` makes the linter shut up so...\\n            require(ITokenController(controller).onTransfer(_from, _to, _amount) == true);\\n        }\\n        // First update the balance array with the new value for the address\\n        //  sending the tokens\\n        updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\\n        // Then update the balance array with the new value for the address\\n        //  receiving the tokens\\n        var previousBalanceTo = balanceOfAt(_to, block.number);\\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n        updateValueAtNow(balances[_to], previousBalanceTo + _amount);\\n        // An event to make the transfer easy to find on the blockchain\\n        Transfer(_from, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @param _owner The address that's balance is being requested\\n    /// @return The balance of `_owner` at the current block\\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\\n        return balanceOfAt(_owner, block.number);\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\\n    ///  its behalf. This is a modified version of the ERC20 approve function\\n    ///  to be a little bit safer\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the approval was successful\\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n        // Alerts the token controller of the approve function call\\n        if (isContract(controller)) {\\n            // Adding the ` == true` makes the linter shut up so...\\n            require(ITokenController(controller).onApprove(msg.sender, _spender, _amount) == true);\\n        }\\n\\n        allowed[msg.sender][_spender] = _amount;\\n        Approval(msg.sender, _spender, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to read the `allowed[]` map\\n    /// @param _owner The address of the account that owns the token\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\\n    ///  to spend\\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\\n    ///  its behalf, and then a function is triggered in the contract that is\\n    ///  being approved, `_spender`. This allows users to use their tokens to\\n    ///  interact with contracts in one function call instead of two\\n    /// @param _spender The address of the contract able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the function call was successful\\n    function approveAndCall(ApproveAndCallFallBack _spender, uint256 _amount, bytes _extraData) public returns (bool success) {\\n        require(approve(_spender, _amount));\\n\\n        _spender.receiveApproval(\\n            msg.sender,\\n            _amount,\\n            this,\\n            _extraData\\n        );\\n\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to get the total number of tokens\\n    /// @return The total number of tokens\\n    function totalSupply() public constant returns (uint) {\\n        return totalSupplyAt(block.number);\\n    }\\n\\n\\n////////////////\\n// Query balance and totalSupply in History\\n////////////////\\n\\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\\n    /// @param _owner The address from which the balance will be retrieved\\n    /// @param _blockNumber The block number when the balance is queried\\n    /// @return The balance at `_blockNumber`\\n    function balanceOfAt(address _owner, uint _blockNumber) public constant returns (uint) {\\n\\n        // These next few lines are used when the balance of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.balanceOfAt` be queried at the\\n        //  genesis block for that token as this contains initial balance of\\n        //  this token\\n        if ((balances[_owner].length == 0) || (balances[_owner][0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                // Has no parent\\n                return 0;\\n            }\\n\\n        // This will return the expected balance during normal situations\\n        } else {\\n            return getValueAt(balances[_owner], _blockNumber);\\n        }\\n    }\\n\\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\\n    /// @param _blockNumber The block number when the totalSupply is queried\\n    /// @return The total amount of tokens at `_blockNumber`\\n    function totalSupplyAt(uint _blockNumber) public constant returns(uint) {\\n\\n        // These next few lines are used when the totalSupply of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\\n        //  genesis block for this token as that contains totalSupply of this\\n        //  token at this block number.\\n        if ((totalSupplyHistory.length == 0) || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                return 0;\\n            }\\n\\n        // This will return the expected totalSupply during normal situations\\n        } else {\\n            return getValueAt(totalSupplyHistory, _blockNumber);\\n        }\\n    }\\n\\n////////////////\\n// Clone Token Method\\n////////////////\\n\\n    /// @notice Creates a new clone token with the initial distribution being\\n    ///  this token at `_snapshotBlock`\\n    /// @param _cloneTokenName Name of the clone token\\n    /// @param _cloneDecimalUnits Number of decimals of the smallest unit\\n    /// @param _cloneTokenSymbol Symbol of the clone token\\n    /// @param _snapshotBlock Block when the distribution of the parent token is\\n    ///  copied to set the initial distribution of the new clone token;\\n    ///  if the block is zero than the actual block, the current block is used\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    /// @return The address of the new MiniMeToken Contract\\n    function createCloneToken(\\n        string _cloneTokenName,\\n        uint8 _cloneDecimalUnits,\\n        string _cloneTokenSymbol,\\n        uint _snapshotBlock,\\n        bool _transfersEnabled\\n    ) public returns(MiniMeToken)\\n    {\\n        uint256 snapshot = _snapshotBlock == 0 ? block.number - 1 : _snapshotBlock;\\n\\n        MiniMeToken cloneToken = tokenFactory.createCloneToken(\\n            this,\\n            snapshot,\\n            _cloneTokenName,\\n            _cloneDecimalUnits,\\n            _cloneTokenSymbol,\\n            _transfersEnabled\\n        );\\n\\n        cloneToken.changeController(msg.sender);\\n\\n        // An event to make the token easy to find on the blockchain\\n        NewCloneToken(address(cloneToken), snapshot);\\n        return cloneToken;\\n    }\\n\\n////////////////\\n// Generate and destroy tokens\\n////////////////\\n\\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\\n    /// @param _owner The address that will be assigned the new tokens\\n    /// @param _amount The quantity of tokens generated\\n    /// @return True if the tokens are generated correctly\\n    function generateTokens(address _owner, uint _amount) onlyController public returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\\n        uint previousBalanceTo = balanceOf(_owner);\\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\\n        Transfer(0, _owner, _amount);\\n        return true;\\n    }\\n\\n\\n    /// @notice Burns `_amount` tokens from `_owner`\\n    /// @param _owner The address that will lose the tokens\\n    /// @param _amount The quantity of tokens to burn\\n    /// @return True if the tokens are burned correctly\\n    function destroyTokens(address _owner, uint _amount) onlyController public returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply >= _amount);\\n        uint previousBalanceFrom = balanceOf(_owner);\\n        require(previousBalanceFrom >= _amount);\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\\n        Transfer(_owner, 0, _amount);\\n        return true;\\n    }\\n\\n////////////////\\n// Enable tokens transfers\\n////////////////\\n\\n\\n    /// @notice Enables token holders to transfer their tokens freely if true\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    function enableTransfers(bool _transfersEnabled) onlyController public {\\n        transfersEnabled = _transfersEnabled;\\n    }\\n\\n////////////////\\n// Internal helper functions to query and set a value in a snapshot array\\n////////////////\\n\\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\\n    /// @param checkpoints The history of values being queried\\n    /// @param _block The block number to retrieve the value at\\n    /// @return The number of tokens being queried\\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block) constant internal returns (uint) {\\n        if (checkpoints.length == 0)\\n            return 0;\\n\\n        // Shortcut for the actual value\\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\\n            return checkpoints[checkpoints.length-1].value;\\n        if (_block < checkpoints[0].fromBlock)\\n            return 0;\\n\\n        // Binary search of the value in the array\\n        uint min = 0;\\n        uint max = checkpoints.length-1;\\n        while (max > min) {\\n            uint mid = (max + min + 1) / 2;\\n            if (checkpoints[mid].fromBlock<=_block) {\\n                min = mid;\\n            } else {\\n                max = mid-1;\\n            }\\n        }\\n        return checkpoints[min].value;\\n    }\\n\\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\\n    ///  `totalSupplyHistory`\\n    /// @param checkpoints The history of data being updated\\n    /// @param _value The new number of tokens\\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value) internal {\\n        if ((checkpoints.length == 0) || (checkpoints[checkpoints.length - 1].fromBlock < block.number)) {\\n            Checkpoint storage newCheckPoint = checkpoints[checkpoints.length++];\\n            newCheckPoint.fromBlock = uint128(block.number);\\n            newCheckPoint.value = uint128(_value);\\n        } else {\\n            Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length - 1];\\n            oldCheckPoint.value = uint128(_value);\\n        }\\n    }\\n\\n    /// @dev Internal function to determine if an address is a contract\\n    /// @param _addr The address being queried\\n    /// @return True if `_addr` is a contract\\n    function isContract(address _addr) constant internal returns(bool) {\\n        uint size;\\n        if (_addr == 0)\\n            return false;\\n\\n        assembly {\\n            size := extcodesize(_addr)\\n        }\\n\\n        return size>0;\\n    }\\n\\n    /// @dev Helper function to return a min betwen the two uints\\n    function min(uint a, uint b) pure internal returns (uint) {\\n        return a < b ? a : b;\\n    }\\n\\n    /// @notice The fallback function: If the contract's controller has not been\\n    ///  set to 0, then the `proxyPayment` method is called which relays the\\n    ///  ether and creates tokens as described in the token controller contract\\n    function () external payable {\\n        require(isContract(controller));\\n        // Adding the ` == true` makes the linter shut up so...\\n        require(ITokenController(controller).proxyPayment.value(msg.value)(msg.sender) == true);\\n    }\\n\\n//////////\\n// Safety Methods\\n//////////\\n\\n    /// @notice This method can be used by the controller to extract mistakenly\\n    ///  sent tokens to this contract.\\n    /// @param _token The address of the token contract that you want to recover\\n    ///  set to 0 in case you want to extract ether.\\n    function claimTokens(address _token) onlyController public {\\n        if (_token == 0x0) {\\n            controller.transfer(this.balance);\\n            return;\\n        }\\n\\n        MiniMeToken token = MiniMeToken(_token);\\n        uint balance = token.balanceOf(this);\\n        token.transfer(controller, balance);\\n        ClaimedTokens(_token, controller, balance);\\n    }\\n\\n////////////////\\n// Events\\n////////////////\\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\\n    event NewCloneToken(address indexed _cloneToken, uint _snapshotBlock);\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _spender,\\n        uint256 _amount\\n        );\\n\\n}\\n\\n\\n////////////////\\n// MiniMeTokenFactory\\n////////////////\\n\\n/// @dev This contract is used to generate clone contracts from a contract.\\n///  In solidity this is the way to create a contract from a contract of the\\n///  same class\\ncontract MiniMeTokenFactory {\\n\\n    /// @notice Update the DApp by creating a new token with new functionalities\\n    ///  the msg.sender becomes the controller of this clone token\\n    /// @param _parentToken Address of the token being cloned\\n    /// @param _snapshotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    /// @return The address of the new token contract\\n    function createCloneToken(\\n        MiniMeToken _parentToken,\\n        uint _snapshotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public returns (MiniMeToken)\\n    {\\n        MiniMeToken newToken = new MiniMeToken(\\n            this,\\n            _parentToken,\\n            _snapshotBlock,\\n            _tokenName,\\n            _decimalUnits,\\n            _tokenSymbol,\\n            _transfersEnabled\\n        );\\n\\n        newToken.changeController(msg.sender);\\n        return newToken;\\n    }\\n}\\n\",\"keccak256\":\"0x90b5ee8b6eb203003862cec59f1dc1b77cee3528cef40dbe81705072c98379cc\"}},\"version\":1}",
  "bytecode": "0x60c0604052600760808190527f4d4d545f302e310000000000000000000000000000000000000000000000000060a090815262000040916004919062000147565b503480156200004e57600080fd5b5060405162001b0938038062001b098339810160409081528151602080840151928401516060850151608086015160a087015160c088015160008054600160a060020a03191633179055600b8054600160a060020a0389166101000261010060a860020a031990911617905592880180519698949690959294919091019291620000de9160019187019062000147565b506002805460ff191660ff851617905581516200010390600390602085019062000147565b5060058054600160a060020a031916600160a060020a039790971696909617909555505050600655600b805460ff19169115159190911790555043600755620001ec565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200018a57805160ff1916838001178555620001ba565b82800160010185558215620001ba579182015b82811115620001ba5782518255916020019190600101906200019d565b50620001c8929150620001cc565b5090565b620001e991905b80821115620001c85760008155600101620001d3565b90565b61190d80620001fc6000396000f30060806040526004361061012f5763ffffffff60e060020a60003504166306fdde0381146101f2578063095ea7b31461027c57806317634514146102b457806318160ddd146102db57806323b872dd146102f0578063313ce5671461031a5780633cebb823146103455780634ee2cd7e1461036657806354fd4d501461038a5780636638c0871461039f57806370a082311461046257806380a5400114610483578063827f32c01461049857806395d89b41146104bc578063981b24d0146104d1578063a9059cbb146104e9578063bef97c871461050d578063c5bcc4f114610522578063cae9ca5114610537578063d3ce77fe146105a0578063dd62ed3e146105c4578063df8de3e7146105eb578063e77772fe1461060c578063f41e60c514610621578063f77c47911461063b575b60005461014490600160a060020a0316610650565b151561014f57600080fd5b600054604080517ff48c30540000000000000000000000000000000000000000000000000000000081523360048201529051600160a060020a039092169163f48c3054913491602480830192602092919082900301818588803b1580156101b557600080fd5b505af11580156101c9573d6000803e3d6000fd5b50505050506040513d60208110156101e057600080fd5b505115156001146101f057600080fd5b005b3480156101fe57600080fd5b5061020761067d565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610241578181015183820152602001610229565b50505050905090810190601f16801561026e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561028857600080fd5b506102a0600160a060020a036004351660243561070a565b604080519115158252519081900360200190f35b3480156102c057600080fd5b506102c961088b565b60408051918252519081900360200190f35b3480156102e757600080fd5b506102c9610891565b3480156102fc57600080fd5b506102a0600160a060020a03600435811690602435166044356108a2565b34801561032657600080fd5b5061032f610939565b6040805160ff9092168252519081900360200190f35b34801561035157600080fd5b506101f0600160a060020a0360043516610942565b34801561037257600080fd5b506102c9600160a060020a0360043516602435610988565b34801561039657600080fd5b50610207610ad5565b3480156103ab57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261044694369492936024939284019190819084018382808284375050604080516020601f818a01358b0180359182018390048302840183018552818452989b60ff8b35169b909a909994019750919550918201935091508190840183828082843750949750508435955050505050602001351515610b30565b60408051600160a060020a039092168252519081900360200190f35b34801561046e57600080fd5b506102c9600160a060020a0360043516610d96565b34801561048f57600080fd5b50610446610daa565b3480156104a457600080fd5b506102a0600160a060020a0360043516602435610db9565b3480156104c857600080fd5b50610207610e85565b3480156104dd57600080fd5b506102c9600435610ee0565b3480156104f557600080fd5b506102a0600160a060020a0360043516602435610fd4565b34801561051957600080fd5b506102a0610ff3565b34801561052e57600080fd5b506102c9610ffc565b34801561054357600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526102a0948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506110029650505050505050565b3480156105ac57600080fd5b506102a0600160a060020a036004351660243561111d565b3480156105d057600080fd5b506102c9600160a060020a03600435811690602435166111e5565b3480156105f757600080fd5b506101f0600160a060020a0360043516611210565b34801561061857600080fd5b506104466113f7565b34801561062d57600080fd5b506101f0600435151561140b565b34801561064757600080fd5b50610446611435565b600080600160a060020a038316151561066c5760009150610677565b823b90506000811191505b50919050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107025780601f106106d757610100808354040283529160200191610702565b820191906000526020600020905b8154815290600101906020018083116106e557829003601f168201915b505050505081565b600b5460009060ff16151561071e57600080fd5b81158061074c5750336000908152600960209081526040808320600160a060020a0387168452909152902054155b151561075757600080fd5b60005461076c90600160a060020a0316610650565b156108235760008054604080517fda682aeb000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038781166024830152604482018790529151919092169263da682aeb92606480820193602093909283900390910190829087803b1580156107e957600080fd5b505af11580156107fd573d6000803e3d6000fd5b505050506040513d602081101561081357600080fd5b5051151560011461082357600080fd5b336000818152600960209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60075481565b600061089c43610ee0565b90505b90565b60008054600160a060020a0316331461092457600b5460ff1615156108c657600080fd5b600160a060020a03841660009081526009602090815260408083203384529091529020548211156108f957506000610932565b600160a060020a03841660009081526009602090815260408083203384529091529020805483900390555b61092f848484611444565b90505b9392505050565b60025460ff1681565b600054600160a060020a0316331461095957600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a03821660009081526008602052604081205415806109e45750600160a060020a0383166000908152600860205260408120805484929081106109cd57fe5b6000918252602090912001546001608060020a0316115b15610aac57600554600160a060020a031615610aa457600554600654600160a060020a0390911690634ee2cd7e908590610a1f908690611639565b6040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015610a7157600080fd5b505af1158015610a85573d6000803e3d6000fd5b505050506040513d6020811015610a9b57600080fd5b50519050610885565b506000610885565b600160a060020a0383166000908152600860205260409020610ace908361164f565b9050610885565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107025780601f106106d757610100808354040283529160200191610702565b600080808415610b405784610b45565b600143035b600b546040517f5b7b72c100000000000000000000000000000000000000000000000000000000815230600482018181526024830185905260ff8c16606484015288151560a484015260c0604484019081528d5160c48501528d51959750610100909404600160a060020a031694635b7b72c194929388938f938f938f938e9391608482019160e40190602089019080838360005b83811015610bf2578181015183820152602001610bda565b50505050905090810190601f168015610c1f5780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b83811015610c52578181015183820152602001610c3a565b50505050905090810190601f168015610c7f5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015610ca457600080fd5b505af1158015610cb8573d6000803e3d6000fd5b505050506040513d6020811015610cce57600080fd5b5051604080517f3cebb8230000000000000000000000000000000000000000000000000000000081523360048201529051919250600160a060020a03831691633cebb8239160248082019260009290919082900301818387803b158015610d3457600080fd5b505af1158015610d48573d6000803e3d6000fd5b5050604080518581529051600160a060020a03851693507f086c875b377f900b07ce03575813022f05dd10ed7640b5282cf6d3c3fc352ade92509081900360200190a2979650505050505050565b6000610da28243610988565b90505b919050565b600554600160a060020a031681565b6000805481908190600160a060020a03163314610dd557600080fd5b610ddd610891565b9150838201821115610dee57600080fd5b610df785610d96565b9050838101811115610e0857600080fd5b610e15600a8584016117ae565b600160a060020a0385166000908152600860205260409020610e39908286016117ae565b604080518581529051600160a060020a038716916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3506001949350505050565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107025780601f106106d757610100808354040283529160200191610702565b600a546000901580610f15575081600a6000815481101515610efe57fe5b6000918252602090912001546001608060020a0316115b15610fc257600554600160a060020a031615610fba57600554600654600160a060020a039091169063981b24d090610f4e908590611639565b6040518263ffffffff1660e060020a02815260040180828152602001915050602060405180830381600087803b158015610f8757600080fd5b505af1158015610f9b573d6000803e3d6000fd5b505050506040513d6020811015610fb157600080fd5b50519050610da5565b506000610da5565b610fcd600a8361164f565b9050610da5565b600b5460009060ff161515610fe857600080fd5b610932338484611444565b600b5460ff1681565b60065481565b600061100e848461070a565b151561101957600080fd5b6040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018690523060448401819052608060648501908152865160848601528651600160a060020a038a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b838110156110ac578181015183820152602001611094565b50505050905090810190601f1680156110d95780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156110fb57600080fd5b505af115801561110f573d6000803e3d6000fd5b506001979650505050505050565b6000805481908190600160a060020a0316331461113957600080fd5b611141610891565b91508382101561115057600080fd5b61115985610d96565b90508381101561116857600080fd5b611175600a8584036117ae565b600160a060020a0385166000908152600860205260409020611199908583036117ae565b604080518581529051600091600160a060020a038816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3506001949350505050565b600160a060020a03918216600090815260096020908152604080832093909416825291909152205490565b600080548190600160a060020a0316331461122a57600080fd5b600160a060020a038316151561127b5760008054604051600160a060020a0390911691303180156108fc02929091818181858888f19350505050158015611275573d6000803e3d6000fd5b506113f2565b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051849350600160a060020a038416916370a082319160248083019260209291908290030181600087803b1580156112df57600080fd5b505af11580156112f3573d6000803e3d6000fd5b505050506040513d602081101561130957600080fd5b505160008054604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0392831660048201526024810185905290519394509085169263a9059cbb92604480840193602093929083900390910190829087803b15801561137f57600080fd5b505af1158015611393573d6000803e3d6000fd5b505050506040513d60208110156113a957600080fd5b5050600054604080518381529051600160a060020a03928316928616917ff931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c919081900360200190a35b505050565b600b546101009004600160a060020a031681565b600054600160a060020a0316331461142257600080fd5b600b805460ff1916911515919091179055565b600054600160a060020a031681565b600080808315156114585760019250611630565b600654431161146657600080fd5b600160a060020a038516158015906114875750600160a060020a0385163014155b151561149257600080fd5b61149c8643610988565b9150838210156114af5760009250611630565b6000546114c490600160a060020a0316610650565b1561157d5760008054604080517f4a393149000000000000000000000000000000000000000000000000000000008152600160a060020a038a8116600483015289811660248301526044820189905291519190921692634a39314992606480820193602093909283900390910190829087803b15801561154357600080fd5b505af1158015611557573d6000803e3d6000fd5b505050506040513d602081101561156d57600080fd5b5051151560011461157d57600080fd5b600160a060020a03861660009081526008602052604090206115a1908584036117ae565b6115ab8543610988565b90508381018111156115bc57600080fd5b600160a060020a03851660009081526008602052604090206115e0908286016117ae565b84600160a060020a031686600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a3600192505b50509392505050565b60008183106116485781610932565b5090919050565b60008060008085805490506000141561166b57600093506117a5565b85548690600019810190811061167d57fe5b6000918252602090912001546001608060020a031685106116da578554869060001981019081106116aa57fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a031693506117a5565b8560008154811015156116e957fe5b6000918252602090912001546001608060020a031685101561170e57600093506117a5565b8554600093506000190191505b8282111561176b57600260018385010104905084868281548110151561173d57fe5b6000918252602090912001546001608060020a03161161175f57809250611766565b6001810391505b61171b565b858381548110151561177957fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a031693505b50505092915050565b8154600090819015806117e7575083544390859060001981019081106117d057fe5b6000918252602090912001546001608060020a0316105b1561185957835484906117fd82600183016118a4565b8154811061180757fe5b600091825260209091200180546001608060020a03858116700100000000000000000000000000000000024382166fffffffffffffffffffffffffffffffff199093169290921716178155915061189e565b83548490600019810190811061186b57fe5b600091825260209091200180546001608060020a0380861670010000000000000000000000000000000002911617815590505b50505050565b8154818355818111156113f2576000838152602090206113f291810190830161089f91905b808211156118dd57600081556001016118c9565b50905600a165627a7a72305820d02cbd70816242e31389c7cfdadb1e10e58abc91732d9768f16d460b28264dc40029",
  "deployedBytecode": "0x60806040526004361061012f5763ffffffff60e060020a60003504166306fdde0381146101f2578063095ea7b31461027c57806317634514146102b457806318160ddd146102db57806323b872dd146102f0578063313ce5671461031a5780633cebb823146103455780634ee2cd7e1461036657806354fd4d501461038a5780636638c0871461039f57806370a082311461046257806380a5400114610483578063827f32c01461049857806395d89b41146104bc578063981b24d0146104d1578063a9059cbb146104e9578063bef97c871461050d578063c5bcc4f114610522578063cae9ca5114610537578063d3ce77fe146105a0578063dd62ed3e146105c4578063df8de3e7146105eb578063e77772fe1461060c578063f41e60c514610621578063f77c47911461063b575b60005461014490600160a060020a0316610650565b151561014f57600080fd5b600054604080517ff48c30540000000000000000000000000000000000000000000000000000000081523360048201529051600160a060020a039092169163f48c3054913491602480830192602092919082900301818588803b1580156101b557600080fd5b505af11580156101c9573d6000803e3d6000fd5b50505050506040513d60208110156101e057600080fd5b505115156001146101f057600080fd5b005b3480156101fe57600080fd5b5061020761067d565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610241578181015183820152602001610229565b50505050905090810190601f16801561026e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561028857600080fd5b506102a0600160a060020a036004351660243561070a565b604080519115158252519081900360200190f35b3480156102c057600080fd5b506102c961088b565b60408051918252519081900360200190f35b3480156102e757600080fd5b506102c9610891565b3480156102fc57600080fd5b506102a0600160a060020a03600435811690602435166044356108a2565b34801561032657600080fd5b5061032f610939565b6040805160ff9092168252519081900360200190f35b34801561035157600080fd5b506101f0600160a060020a0360043516610942565b34801561037257600080fd5b506102c9600160a060020a0360043516602435610988565b34801561039657600080fd5b50610207610ad5565b3480156103ab57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261044694369492936024939284019190819084018382808284375050604080516020601f818a01358b0180359182018390048302840183018552818452989b60ff8b35169b909a909994019750919550918201935091508190840183828082843750949750508435955050505050602001351515610b30565b60408051600160a060020a039092168252519081900360200190f35b34801561046e57600080fd5b506102c9600160a060020a0360043516610d96565b34801561048f57600080fd5b50610446610daa565b3480156104a457600080fd5b506102a0600160a060020a0360043516602435610db9565b3480156104c857600080fd5b50610207610e85565b3480156104dd57600080fd5b506102c9600435610ee0565b3480156104f557600080fd5b506102a0600160a060020a0360043516602435610fd4565b34801561051957600080fd5b506102a0610ff3565b34801561052e57600080fd5b506102c9610ffc565b34801561054357600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526102a0948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506110029650505050505050565b3480156105ac57600080fd5b506102a0600160a060020a036004351660243561111d565b3480156105d057600080fd5b506102c9600160a060020a03600435811690602435166111e5565b3480156105f757600080fd5b506101f0600160a060020a0360043516611210565b34801561061857600080fd5b506104466113f7565b34801561062d57600080fd5b506101f0600435151561140b565b34801561064757600080fd5b50610446611435565b600080600160a060020a038316151561066c5760009150610677565b823b90506000811191505b50919050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107025780601f106106d757610100808354040283529160200191610702565b820191906000526020600020905b8154815290600101906020018083116106e557829003601f168201915b505050505081565b600b5460009060ff16151561071e57600080fd5b81158061074c5750336000908152600960209081526040808320600160a060020a0387168452909152902054155b151561075757600080fd5b60005461076c90600160a060020a0316610650565b156108235760008054604080517fda682aeb000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038781166024830152604482018790529151919092169263da682aeb92606480820193602093909283900390910190829087803b1580156107e957600080fd5b505af11580156107fd573d6000803e3d6000fd5b505050506040513d602081101561081357600080fd5b5051151560011461082357600080fd5b336000818152600960209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60075481565b600061089c43610ee0565b90505b90565b60008054600160a060020a0316331461092457600b5460ff1615156108c657600080fd5b600160a060020a03841660009081526009602090815260408083203384529091529020548211156108f957506000610932565b600160a060020a03841660009081526009602090815260408083203384529091529020805483900390555b61092f848484611444565b90505b9392505050565b60025460ff1681565b600054600160a060020a0316331461095957600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a03821660009081526008602052604081205415806109e45750600160a060020a0383166000908152600860205260408120805484929081106109cd57fe5b6000918252602090912001546001608060020a0316115b15610aac57600554600160a060020a031615610aa457600554600654600160a060020a0390911690634ee2cd7e908590610a1f908690611639565b6040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015610a7157600080fd5b505af1158015610a85573d6000803e3d6000fd5b505050506040513d6020811015610a9b57600080fd5b50519050610885565b506000610885565b600160a060020a0383166000908152600860205260409020610ace908361164f565b9050610885565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107025780601f106106d757610100808354040283529160200191610702565b600080808415610b405784610b45565b600143035b600b546040517f5b7b72c100000000000000000000000000000000000000000000000000000000815230600482018181526024830185905260ff8c16606484015288151560a484015260c0604484019081528d5160c48501528d51959750610100909404600160a060020a031694635b7b72c194929388938f938f938f938e9391608482019160e40190602089019080838360005b83811015610bf2578181015183820152602001610bda565b50505050905090810190601f168015610c1f5780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b83811015610c52578181015183820152602001610c3a565b50505050905090810190601f168015610c7f5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015610ca457600080fd5b505af1158015610cb8573d6000803e3d6000fd5b505050506040513d6020811015610cce57600080fd5b5051604080517f3cebb8230000000000000000000000000000000000000000000000000000000081523360048201529051919250600160a060020a03831691633cebb8239160248082019260009290919082900301818387803b158015610d3457600080fd5b505af1158015610d48573d6000803e3d6000fd5b5050604080518581529051600160a060020a03851693507f086c875b377f900b07ce03575813022f05dd10ed7640b5282cf6d3c3fc352ade92509081900360200190a2979650505050505050565b6000610da28243610988565b90505b919050565b600554600160a060020a031681565b6000805481908190600160a060020a03163314610dd557600080fd5b610ddd610891565b9150838201821115610dee57600080fd5b610df785610d96565b9050838101811115610e0857600080fd5b610e15600a8584016117ae565b600160a060020a0385166000908152600860205260409020610e39908286016117ae565b604080518581529051600160a060020a038716916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3506001949350505050565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107025780601f106106d757610100808354040283529160200191610702565b600a546000901580610f15575081600a6000815481101515610efe57fe5b6000918252602090912001546001608060020a0316115b15610fc257600554600160a060020a031615610fba57600554600654600160a060020a039091169063981b24d090610f4e908590611639565b6040518263ffffffff1660e060020a02815260040180828152602001915050602060405180830381600087803b158015610f8757600080fd5b505af1158015610f9b573d6000803e3d6000fd5b505050506040513d6020811015610fb157600080fd5b50519050610da5565b506000610da5565b610fcd600a8361164f565b9050610da5565b600b5460009060ff161515610fe857600080fd5b610932338484611444565b600b5460ff1681565b60065481565b600061100e848461070a565b151561101957600080fd5b6040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018690523060448401819052608060648501908152865160848601528651600160a060020a038a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b838110156110ac578181015183820152602001611094565b50505050905090810190601f1680156110d95780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156110fb57600080fd5b505af115801561110f573d6000803e3d6000fd5b506001979650505050505050565b6000805481908190600160a060020a0316331461113957600080fd5b611141610891565b91508382101561115057600080fd5b61115985610d96565b90508381101561116857600080fd5b611175600a8584036117ae565b600160a060020a0385166000908152600860205260409020611199908583036117ae565b604080518581529051600091600160a060020a038816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3506001949350505050565b600160a060020a03918216600090815260096020908152604080832093909416825291909152205490565b600080548190600160a060020a0316331461122a57600080fd5b600160a060020a038316151561127b5760008054604051600160a060020a0390911691303180156108fc02929091818181858888f19350505050158015611275573d6000803e3d6000fd5b506113f2565b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051849350600160a060020a038416916370a082319160248083019260209291908290030181600087803b1580156112df57600080fd5b505af11580156112f3573d6000803e3d6000fd5b505050506040513d602081101561130957600080fd5b505160008054604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0392831660048201526024810185905290519394509085169263a9059cbb92604480840193602093929083900390910190829087803b15801561137f57600080fd5b505af1158015611393573d6000803e3d6000fd5b505050506040513d60208110156113a957600080fd5b5050600054604080518381529051600160a060020a03928316928616917ff931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c919081900360200190a35b505050565b600b546101009004600160a060020a031681565b600054600160a060020a0316331461142257600080fd5b600b805460ff1916911515919091179055565b600054600160a060020a031681565b600080808315156114585760019250611630565b600654431161146657600080fd5b600160a060020a038516158015906114875750600160a060020a0385163014155b151561149257600080fd5b61149c8643610988565b9150838210156114af5760009250611630565b6000546114c490600160a060020a0316610650565b1561157d5760008054604080517f4a393149000000000000000000000000000000000000000000000000000000008152600160a060020a038a8116600483015289811660248301526044820189905291519190921692634a39314992606480820193602093909283900390910190829087803b15801561154357600080fd5b505af1158015611557573d6000803e3d6000fd5b505050506040513d602081101561156d57600080fd5b5051151560011461157d57600080fd5b600160a060020a03861660009081526008602052604090206115a1908584036117ae565b6115ab8543610988565b90508381018111156115bc57600080fd5b600160a060020a03851660009081526008602052604090206115e0908286016117ae565b84600160a060020a031686600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a3600192505b50509392505050565b60008183106116485781610932565b5090919050565b60008060008085805490506000141561166b57600093506117a5565b85548690600019810190811061167d57fe5b6000918252602090912001546001608060020a031685106116da578554869060001981019081106116aa57fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a031693506117a5565b8560008154811015156116e957fe5b6000918252602090912001546001608060020a031685101561170e57600093506117a5565b8554600093506000190191505b8282111561176b57600260018385010104905084868281548110151561173d57fe5b6000918252602090912001546001608060020a03161161175f57809250611766565b6001810391505b61171b565b858381548110151561177957fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a031693505b50505092915050565b8154600090819015806117e7575083544390859060001981019081106117d057fe5b6000918252602090912001546001608060020a0316105b1561185957835484906117fd82600183016118a4565b8154811061180757fe5b600091825260209091200180546001608060020a03858116700100000000000000000000000000000000024382166fffffffffffffffffffffffffffffffff199093169290921716178155915061189e565b83548490600019810190811061186b57fe5b600091825260209091200180546001608060020a0380861670010000000000000000000000000000000002911617815590505b50505050565b8154818355818111156113f2576000838152602090206113f291810190830161089f91905b808211156118dd57600081556001016118c9565b50905600a165627a7a72305820d02cbd70816242e31389c7cfdadb1e10e58abc91732d9768f16d460b28264dc40029",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "This function makes it easy to read the `allowed[]` map",
        "params": {
          "_owner": "The address of the account that owns the token",
          "_spender": "The address of the account able to transfer the tokens"
        },
        "return": "Amount of remaining tokens of _owner that _spender is allowed  to spend"
      },
      "approve(address,uint256)": {
        "params": {
          "_amount": "The amount of tokens to be approved for transfer",
          "_spender": "The address of the account able to transfer the tokens"
        },
        "return": "True if the approval was successful"
      },
      "approveAndCall(address,uint256,bytes)": {
        "params": {
          "_amount": "The amount of tokens to be approved for transfer",
          "_spender": "The address of the contract able to transfer the tokens"
        },
        "return": "True if the function call was successful"
      },
      "balanceOf(address)": {
        "params": {
          "_owner": "The address that's balance is being requested"
        },
        "return": "The balance of `_owner` at the current block"
      },
      "balanceOfAt(address,uint256)": {
        "details": "Queries the balance of `_owner` at a specific `_blockNumber`",
        "params": {
          "_blockNumber": "The block number when the balance is queried",
          "_owner": "The address from which the balance will be retrieved"
        },
        "return": "The balance at `_blockNumber`"
      },
      "changeController(address)": {
        "params": {
          "_newController": "The new controller of the contract"
        }
      },
      "claimTokens(address)": {
        "params": {
          "_token": "The address of the token contract that you want to recover  set to 0 in case you want to extract ether."
        }
      },
      "createCloneToken(string,uint8,string,uint256,bool)": {
        "params": {
          "_cloneDecimalUnits": "Number of decimals of the smallest unit",
          "_cloneTokenName": "Name of the clone token",
          "_cloneTokenSymbol": "Symbol of the clone token",
          "_snapshotBlock": "Block when the distribution of the parent token is  copied to set the initial distribution of the new clone token;  if the block is zero than the actual block, the current block is used",
          "_transfersEnabled": "True if transfers are allowed in the clone"
        },
        "return": "The address of the new MiniMeToken Contract"
      },
      "destroyTokens(address,uint256)": {
        "params": {
          "_amount": "The quantity of tokens to burn",
          "_owner": "The address that will lose the tokens"
        },
        "return": "True if the tokens are burned correctly"
      },
      "enableTransfers(bool)": {
        "params": {
          "_transfersEnabled": "True if transfers are allowed in the clone"
        }
      },
      "generateTokens(address,uint256)": {
        "params": {
          "_amount": "The quantity of tokens generated",
          "_owner": "The address that will be assigned the new tokens"
        },
        "return": "True if the tokens are generated correctly"
      },
      "totalSupply()": {
        "details": "This function makes it easy to get the total number of tokens",
        "return": "The total number of tokens"
      },
      "totalSupplyAt(uint256)": {
        "params": {
          "_blockNumber": "The block number when the totalSupply is queried"
        },
        "return": "The total amount of tokens at `_blockNumber`"
      },
      "transfer(address,uint256)": {
        "params": {
          "_amount": "The amount of tokens to be transferred",
          "_to": "The address of the recipient"
        },
        "return": "Whether the transfer was successful or not"
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "_amount": "The amount of tokens to be transferred",
          "_from": "The address holding the tokens being transferred",
          "_to": "The address of the recipient"
        },
        "return": "True if the transfer was successful"
      }
    }
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "`msg.sender` approves `_spender` to spend `_amount` tokens on  its behalf. This is a modified version of the ERC20 approve function  to be a little bit safer"
      },
      "approveAndCall(address,uint256,bytes)": {
        "notice": "`msg.sender` approves `_spender` to send `_amount` tokens on  its behalf, and then a function is triggered in the contract that is  being approved, `_spender`. This allows users to use their tokens to  interact with contracts in one function call instead of two"
      },
      "balanceOfAt(address,uint256)": {
        "notice": "/////////////"
      },
      "changeController(address)": {
        "notice": "Changes the controller of the contract"
      },
      "claimTokens(address)": {
        "notice": "///////This method can be used by the controller to extract mistakenly  sent tokens to this contract."
      },
      "createCloneToken(string,uint8,string,uint256,bool)": {
        "notice": "/////////////Creates a new clone token with the initial distribution being  this token at `_snapshotBlock`"
      },
      "destroyTokens(address,uint256)": {
        "notice": "Burns `_amount` tokens from `_owner`"
      },
      "enableTransfers(bool)": {
        "notice": "/////////////Enables token holders to transfer their tokens freely if true"
      },
      "generateTokens(address,uint256)": {
        "notice": "/////////////Generates `_amount` tokens that are assigned to `_owner`"
      },
      "totalSupplyAt(uint256)": {
        "notice": "Total amount of tokens at a specific `_blockNumber`."
      },
      "transfer(address,uint256)": {
        "notice": "////////////////Send `_amount` tokens to `_to` from `msg.sender`"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Send `_amount` tokens to `_to` from `_from` on the condition it  is approved by `_from`"
      }
    }
  }
}